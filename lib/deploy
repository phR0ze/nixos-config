#!/usr/bin/env bash
#set -x

# Deploy Virtual Machine
# 
# ## Features
# -
# --------------------------------------------------------------------------------------------------

# Usage for the deploy command and its sub commands
# --------------------------------------------------------------------------------------------------
deploy::usage()
{
    cat <<USAGE
Usage:
  deploy [COMMAND] [ARGS...] [OPTIONS] 

Options:
  -h, --help            Print out usage

Commands:
  vm MACHINE            Deploy the given VM machine
USAGE

    log::ln "\nExamples:"
    log::subln "Deploy prod1 VM: ${green}./${SCRIPT} deploy vm prod1${none}"
    echo
    exit
}

# Parse the deploy commands and execute
# --------------------------------------------------------------------------------------------------
deploy::run()
{
    utils::help "$@" "deploy::usage"

    local command=$1; shift
    case "$command" in
        vm) deploy::vm "$@" ;;
        *) log::error "Invalid deploy command: ${cyan}${command}${none}"; echo; deploy::usage ;;
    esac
}
 
# Deploy the vm to the host at /var/lib/vms/$MACHINE
# - $1 - optional machine name to target
# --------------------------------------------------------------------------------------------------
deploy::vm()
{
    core::preamble

    # Ensure machine is set
    MACHINE="vm-${1#vm-}" # ensure 'vm-' prefix
    log::header1 "Deploying ${cyan}${MACHINE}${none}"

    # Target includes the prefix path
    TARGET="machines/${MACHINE}"
    flake::ensure_target "$MACHINE"

    local machine_dst="/var/lib/vms/$MACHINE"

    # Remove any existing
    log::ls -n "Cleaning target directory ${cyan}${machine_dst}${none}..."
    utils::confirm_continue
    rm -rf "${machine_dst}"

    # Copy over latest
    log::ls -n "Creating destination directories ${cyan}${machine_dst}${none}..."
    mkdir -p "${machine_dst}"
    log::status

    log::ls -n "Copying source to ${cyan}${machine_dst}${none}..."
    cp -r ${CONFIG_DIR}/. "$machine_dst"
    log::status

    # Build the deployed vm
    log::ls "Switching to ${cyan}${machine_dst}${none} to build VM"
    pushd "$machine_dst"
    ./clu build vm $machine
    popd
}
