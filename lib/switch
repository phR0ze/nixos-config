#!/usr/bin/env bash

NIXOS_PROFILES_PATH="/nix/var/nix/profiles"

# Usage for the switch command and its sub commands
# --------------------------------------------------------------------------------------------------
switch::usage()
{
    cat <<USAGE
Usage:
  switch [ARGS...] [OPTIONS]

Options:
  -h, --help        Print out usage

Arguments:
  TARGET            System version # or system version path
USAGE

    log::ln "\nExamples:"
    log::subln "Set version 39 as boot default: ${green}./${SCRIPT} switch 39${none}"
    log::subln "Set current as boot default: ${green}./${SCRIPT} switch /run/current-system${none}"
    echo
    exit
}


# Parse the switch commands and execute
# --------------------------------------------------------------------------------------------------
switch::run()
{
    utils::help "$@" "switch::usage"

    core::title
    log::header1 "Update ${NIXOS_PROFILES_PATH} for system version switch"

    # Determine if the argument is a path or generation number
    local path=$(realpath $1)
    local link=""
    local target=""
    local latest="$1"
    local isVer=false
    if [[ -e "$path" ]]; then
        latest="$(_switch::getLatestVer)"
        link="system-${latest}-link"
        target="$(realpath -e "$path")"
    else
        isVer=true
        link="system-${1}-link"
        target=$(realpath $NIXOS_PROFILES_PATH/$link)
        if [[ ! -e "$target" ]]; then
            log::fatal "argument ${cyan}${1}${none} isn't a generation # or a path"
        fi
    fi

    # Execute switch
    log::subln "   Target ver: ${aqua}${latest}${none}"
    pushd $NIXOS_PROFILES_PATH &>/dev/null

    # Create the target link if it is a new target
    if [[ $isVer == false ]]; then
        log::subln "Creating link: ${purple}${link}${none} -> ${aqua}${target}${none}"
        #ln -s "$target" "$link"
    else
        log::subln "  Link exists: ${purple}${link}${none} -> ${aqua}${target}${none}"
    fi

    # Update system link if needed
    if [[ "$(realpath system)" != "${target}" ]]; then
        log::subln "  Update link: ${purple}system${none} -> ${aqua}${link}${none}"
        rm system
        ln -s "$link" system
    else
        log::subln " Link correct: ${purple}system${none} -> ${aqua}${link}${none}"
    fi
    popd &>/dev/null

    # Finally set the default boot option
    log::header1 "Switching to ${link}"
    ${target}/bin/switch-to-configuration switch
}

# Get the generation from the directory name
# --------------------------------------------------------------------------------------------------
# ### Params
# - $1 the generation directory name
#
switch::getVer()
{
    local base=$(basename $1)               # e.g. system-40-link
    local trimPrefix=${base#system-}        # e.g. 40-link
    local trimSuffix=${trimPrefix%-link}    # e.g. 40

    echo "$trimSuffix"
}

# Get the latest system version
# --------------------------------------------------------------------------------------------------
_switch::getLatestVer()
{
    # Get the system versions
    declare -a links=( $(echo $(find $NIXOS_PROFILES_PATH -type l -name 'system-*-link' | sort) ) )
    if [[ "${#links}" == 0 ]]; then
        log::fatal "no system versions found at ${cyan}${NIXOS_PROFILES_PATH}${none}"
    fi

    # Get the latest and trim down to just the version number
    local generation="$(switch::getVer "${links[-1]}")"

    # Increment the version
    local result=$((generation+1))          # e.g. 41

    echo "$result"
}
