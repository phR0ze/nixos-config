#!/usr/bin/env bash

# Usage for the run command and its sub commands
# --------------------------------------------------------------------------------------------------
run::usage()
{
    cat <<USAGE
Usage:
  run [COMMAND] [ARGS...] [OPTIONS]

Options:
  -h, --help        Print out usage

Commands:
  vm                Run the test VM, depends on '${SCRIPT} build vm'"
USAGE

    log::ln "\nExamples:"
    log::subln "Run the test VM: ${green}./${SCRIPT} run vm${none}"
    log::subln "Run the prod1 VM: ${green}./${SCRIPT} run vm prod1${none}"
    echo
    exit
}


# Parse the run commands and execute
# --------------------------------------------------------------------------------------------------
run::run()
{
    utils::help "$@" "run::usage"

    local command=$1; shift
    case "$command" in
        vm) run::vm "$@" ;;
        *) log::error "Invalid run command: ${cyan}${command}${none}"; run::usage ;;
    esac
}
 
# Run the test vm
# - $1 - optional machine name to target
# --------------------------------------------------------------------------------------------------
run::vm()
{
    local machine="${1#vm-}"  # trim vm- prefix
    [[ "$machine" == "" ]] && machine="test"
    MACHINE="vm-${machine}"

    # Build the vm
    core::title
    log::header1 "Running VM ${cyan}${MACHINE}${none}"
    flake::switch "$MACHINE"
    trap flake::restore EXIT

    local runner="./result/bin/run"
    [[ ! -f "$runner" ]] && nix build .#nixosConfigurations.target.config.system.build.vm

    local tap="./result/bin/macvtap-up"
    [[ -f "$tap" ]] && $tap && log::ln "Running tap ${cyan}${tap}${none}"

    log::ln "Running ${cyan}${runner}${none}"
    $runner
}
