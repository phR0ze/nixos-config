#!/usr/bin/env bash

# --------------------------------------------------------------------------------------------------
# Package list commands
# --------------------------------------------------------------------------------------------------

# Usage specific to the list sub-command
# --------------------------------------------------------------------------------------------------
pkgs::list::usage()
{
    cat <<USAGE
Usage:
  ll [OPTIONS] [COMMAND] [ARGS...]

Options:
  -h, --help        Print out top level usage

Commands:
  all               List out all installed packages
  pkg BINARY        List detail about the package the target belongs to
  PACKAGE           List out the package if installed
USAGE

    log::ln "\nExamples:"
    log::subln "List installed package by name: ${green}./${SCRIPT} pkgs ll tumbler${none}"
    log::subln "List all installed packages: ${green}./${SCRIPT} pkgs ll all${none}"
    log::subln "List binary's installed package: ${green}./${SCRIPT} pkgs ll pkg dircolors${none}"
    echo
    exit
}

# Parse list sub commands
# --------------------------------------------------------------------------------------------------
pkgs::list::run()
{
    local cmd="$1"; shift
    #[ "$cmd" == "ls" ] && echo space
    #[ "$cmd" == "ll" ] && echo newline
    [[ $# -eq 0 || $1 == "-h" || $1 == "--help" ]] && pkgs::list::usage

    local command=$1; shift
    case "$command" in
        all) pkgs::list::all ;;
        pkg) pkgs::list::by_bin "$@" ;;
        *) pkgs::list::by_name "$command" ;;
    esac
}

# List out all local packages
# --------------------------------------------------------------------------------------------------
pkgs::list::all()
{
    # TODO: Slow and maybe not the best way to do this
    for x in /nix/store/*; do
        local name=$(basename $x .drv)
        if [ "${x}" != "${name}" ]; then
            name="${name#*-}"
            echo "$name"
        fi
    done
}

# List out the package the binary belongs to
# - binary needs to be findable with 'which'
#
# ### Args
# - $1 is the target to lookup
# --------------------------------------------------------------------------------------------------
pkgs::list::by_bin()
{
    [[ $# -eq 0 || $1 == "-h" || $1 == "--help" ]] && pkgs::list::usage

    local target="$1"
    local bin_path=$(which "$target" 2>/dev/null)
    if [ "x$bin_path" != "x" ]; then
        local link="$(dirname $(readlink $bin_path))"
        local dir="$(dirname $bin_path)"
        local pkg_dir="$(basename $(dirname $link))"
        local pkg="${pkg_dir#*-}"

        [ $QUIET -eq 1 ] && echo -e "${pkg}"
        log::ln "Package:     ${cyan}${pkg}${none}"
        log::ln "Link name:   $dir/${cyan}${target}${none}"
        log::ln "Link target: ${link}/${cyan}${target}${none}"
    else
        log::error "Unable to find target: ${cyan}${target}${none}"
    fi
}

# List out the package by name
#
# ### Args
# - $1 is the target to lookup
# --------------------------------------------------------------------------------------------------
pkgs::list::by_name()
{
    [[ $# -eq 0 || $1 == "-h" || $1 == "--help" ]] && pkgs::list::usage

    local target="$1"
    local dir=$(find /nix/store -maxdepth 1 -type d -iname "*${target}*" 2>/dev/null)
    if [ "x$dir" != "x" ]; then
        local pkg="${dir#*-}"         # trim prefix to leave pkg name
        local prefix="${dir%${pkg}}"  # now trim pkg name suffix to leave prefix

        [ $QUIET -eq 1 ] && echo -e "${pkg}"
        log::ln "Package:     ${cyan}${pkg}${none}"
        log::ln "Nix Path:    ${prefix}${cyan}${pkg}${none}"
    else
        log::error "Unable to find target: ${cyan}${target}${none}"
    fi
}
