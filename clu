#!/usr/bin/env bash

# MIT License
# Copyright (c) 2024 phR0ze
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

# --------------------------------------------------------------------------------------------------
# Simple NixOS install automation
# 
# ## Features
# - Handles partitioning the disk in preparation for installation
# - Allows for customizing some common install settings
#   - hostname
# --------------------------------------------------------------------------------------------------
SCRIPT=$(basename $0)
SCRIPT_DIR=$(readlink -f $(dirname $BASH_SOURCE[0]))
source "${SCRIPT_DIR}/lib/all"

core::title()
{
    VERSION=0.0.1
    #VERSION=$(cat VERSION)
    log::header '=' "${cyan}" "Codified Likeness Utility - clu v${VERSION}" 1
    echo -e "${green}that is to say, build me a linux that i like${none}\n"
}

core::usage()
{
    core::title
    echo -e "Usage: ${cyan}./$(basename $0)${none} [options]\n"
    echo -e "Options:"
    echo -e "  -b COMPONENT     Build the given component"
    echo -e "  -i               Install the default system configuration" 
    echo -e "  -f FLAKE_URL     Install the given configuration flake at this URL"
    echo -e "  -t TEST_FUNC     Execute the given function for testing purposes"
    echo -e "  -h               Display usage help\n"
    echo -e "Examples:"
    echo -e "  ${green}Install the given configuration flake:${none} sudo ./${SCRIPT} -f https://github.com/phR0ze/nixos-config"
    echo -e "  ${green}Build the installer ISO:${none} ./${SCRIPT} -b iso"
    echo
    exit
}

# getopts notes
# - leading char <color> suppresses typical diagnostic messages
# - <colon> following flag means expect and argument
# - the \ on ? is required to make it work properly
while getopts ":b:f:it:h" opt; do
    case $opt in
        b) BUILD=$OPTARG;;
        f) FLAKE=$OPTARG;;
        i) INSTALL=1;;
        t) TEST=$OPTARG;;
        h) core::usage;;
        \?) echo -e "${red}Invalid option: ${none}-${OPTARG}\n"; core::usage;;
        :) echo -e "${red}Argument is required for option: ${none}-${OPTARG}\n"; core::usage;;
    esac
done
[ $(($OPTIND -1)) -eq 0 ] && core::usage
core::title

# Invoke the testing function if given
if [ ! -z ${TEST+x} ]; then
    log::header '-' "${yellow}" "Testing" 1
    eval $TEST
fi

# Build the given component
if [ ! -z ${BUILD+x} ]; then
    [ "${BUILD}" == "iso" ] && build::iso
fi

# Install the given configuration flake
if [ ! -z ${INSTALL+x} ] || [ ! -z ${FLAKE+x} ]; then
    install::run
fi

# vim: ft=sh:ts=4:sw=4:sts=4
