Binary files a/.git/index and b/.git/index differ
diff '--color=auto' -ruN a/launcher/LaunchController.cpp b/launcher/LaunchController.cpp
--- a/launcher/LaunchController.cpp	2025-02-15 13:05:23.388149815 -0700
+++ b/launcher/LaunchController.cpp	2025-02-15 13:50:48.348069975 -0700
@@ -86,23 +86,6 @@
 
     // Find an account to use.
     auto accounts = APPLICATION->accounts();
-    if (accounts->count() <= 0 || !accounts->anyAccountIsValid()) {
-        // Tell the user they need to log in at least one account in order to play.
-        auto reply = CustomMessageBox::selectable(m_parentWidget, tr("No Accounts"),
-                                                  tr("In order to play Minecraft, you must have at least one Microsoft "
-                                                     "account which owns Minecraft logged in. "
-                                                     "Would you like to open the account manager to add an account now?"),
-                                                  QMessageBox::Information, QMessageBox::Yes | QMessageBox::No)
-                         ->exec();
-
-        if (reply == QMessageBox::Yes) {
-            // Open the account manager.
-            APPLICATION->ShowGlobalSettings(m_parentWidget, "accounts");
-        } else if (reply == QMessageBox::No) {
-            // Do not open "profile select" dialog.
-            return;
-        }
-    }
 
     // Select the account to use. If the instance has a specific account set, that will be used. Otherwise, the default account will be used
     auto instanceAccountId = m_instance->settings()->get("InstanceAccountId").toString();
diff '--color=auto' -ruN a/launcher/minecraft/auth/MinecraftAccount.h b/launcher/minecraft/auth/MinecraftAccount.h
--- a/launcher/minecraft/auth/MinecraftAccount.h	2025-02-15 13:26:53.226367619 -0700
+++ b/launcher/minecraft/auth/MinecraftAccount.h	2025-02-15 13:11:35.679290909 -0700
@@ -116,7 +116,7 @@
 
     [[nodiscard]] AccountType accountType() const noexcept { return data.type; }
 
-    bool ownsMinecraft() const { return data.type != AccountType::Offline && data.minecraftEntitlement.ownsMinecraft; }
+    bool ownsMinecraft() const { return true; }
 
     bool hasProfile() const { return data.profileId().size() != 0; }
 
diff '--color=auto' -ruN a/launcher/ui/pages/global/AccountListPage.cpp b/launcher/ui/pages/global/AccountListPage.cpp
--- a/launcher/ui/pages/global/AccountListPage.cpp	2025-02-15 13:26:53.230367666 -0700
+++ b/launcher/ui/pages/global/AccountListPage.cpp	2025-02-15 13:13:17.844319403 -0700
@@ -141,13 +141,7 @@
 
 void AccountListPage::on_actionAddOffline_triggered()
 {
-    if (!m_accounts->anyAccountIsValid()) {
-        QMessageBox::warning(this, tr("Error"),
-                             tr("You must add a Microsoft account that owns Minecraft before you can add an offline account."
-                                "<br><br>"
-                                "If you have lost your account you can contact Microsoft for support."));
-        return;
-    }
+    // Allow offline accounts
 
     MinecraftAccountPtr account =
         OfflineLoginDialog::newAccount(this, tr("Please enter your desired username to add your offline account."));
