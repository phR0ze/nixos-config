#!/usr/bin/env bash
set -euo pipefail           # configure an immediate fail if something goes badly
shopt -s extglob            # enable extended globbing

# --------------------------------------------------------------------------------------------------
# Install the indicated files to the system
# 1. for every file in the src store create a corresponding symlink in /nix/files
# 2.
# 3.
# 4.
# 5. Update /nix/files.old
# --------------------------------------------------------------------------------------------------
src="$(realpath "$1")"    # the /nix/store path with all the files that need installed
dst="$2"                  # destination directory for tracking e.g. /nix
files="$dst/files"        # link to current files store path
log="$dst/files.log"      # file tracking all files copied or linked
tmp="$dst/files.tmp"      # old file tracking all files copied or linked

# Trim leading and trailing whitespace
trimspace() {
  local result="$1"                     # return value
  local val="$2"                        # value to trim

  val="${val##+([[:space:]])}"          # trim leading whitespace
  val="${val%%+([[:space:]])}"          # trim trailing whitespace

  eval "$result"="'$val'"               # return as string
}

# Copy the given source store path to the implicated destination using the meta data file for mode, 
# user and group properties
copy() {
  local source="${1}"                     # source store file path
  local target="${1#"$src"}"              # trim off the store path prefix

  # Read the copy metadata into an array
  # - t trims the newline off the string
  readarray -t meta < "$source.copy"
  trimspace mode "${meta[0]}"             # get trimmed mode
  trimspace user "${meta[1]}"             # get trimmed user
  trimspace group "${meta[2]}"            # get trimmed group

  # install
  # - is more performant as it does this operation in one go
  # - overwrites the existing target if it exists
  # - resolves link indirection recursively to find original source
  echo "copying: $source -> $target"
  install -m $mode -o $user -g $group "$source" "$target"
  echo "copied $target" >> "$log"
}

# Link the given source store path to the implicated destination
link() {
  local source="${1}"                     # source store file path
  local target="${1#"$src"}"              # trim off the store path prefix

  echo "linking: $source -> $target"
  ln -sf "$source" "$target"
  echo "linked $target" >> "$log"
}

# Save off the existing tracking files
mv "$log" "$tmp"

# Process all links from the source store path
echo "installing files from ${src}"
find "$src" -type l | while read x; do  # handles spaces in results
  
  # Copy file to destination
  if [[ -e "$x.copy" ]]; then
    copy "$x"

  # Link file to destination
  else
    link "$x"
  fi
done

# Update the source store path
#ln -sf "$src" "$curr"
