# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = [ "ata_generic" "ehci_pci" "ahci" "isci" "xhci_pci" "firewire_ohci" "usbhid" "usb_storage" "sd_mod" "sr_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/567e6ee8-fb48-47ca-84b9-ac523a174702";
    fsType = "ext4";
  };
  fileSystems."/mnt/storage1" = {
    device = "/dev/disk/by-uuid/ee3bdf73-837b-48f4-a9a3-27fdb13f7217";
    fsType = "ext4";
  };
  fileSystems."/mnt/storage2" = {
    device = "/dev/disk/by-uuid/a1a0d941-9970-4d1f-bb9b-a65cbce6fb33";
    fsType = "ext4";
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/70B5-4E59";
    fsType = "vfat";
  };

  swapDevices = [ {
    device = "/dev/disk/by-uuid/1de7353e-9cbf-4b60-b6de-dbe2a37a1f78"; }
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno1.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
